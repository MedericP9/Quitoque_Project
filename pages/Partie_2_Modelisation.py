import streamlit as st

st.sidebar.write("Made by M√©d√©ric PENIGUEL")
st.sidebar.write("My [linkedIn profil](https://www.linkedin.com/in/mederic-peniguel)")
st.sidebar.write("My [Email](mailto:mederic.peniguel@efrei.net)")

st.markdown(
    """
    <h2 style='text-align: center; font-size: 28px; color: #4CAF50;'>
        Partie 2 : Mod√©lisation
    </h2>
    """,
    unsafe_allow_html=True,
)

st.markdown("### Approche pour la pr√©diction des demandes üìä")

st.markdown(
    f"""
    <div style="text-align: justify;">
        Cette page d√©crit les approches de mod√©lisation visant √† r√©soudre le probl√®me de l'estimation de la r√©partition des demandes sur diff√©rentes recettes. L‚Äôobjectif de cet exercice est de pr√©dire la r√©partition des demandes pour de nouvelles recettes sur une semaine donn√©e, en sachant le nombre total de repas √† pr√©parer. Pour cela, il est n√©cessaire de s'appuyer sur des recettes pr√©par√©es dans le pass√©, pour lesquelles des donn√©es sur la r√©partition des demandes ont √©t√© collect√©es.
   </br>
    </br>
    </div>
    """,
    unsafe_allow_html=True,
)
st.markdown(
    f"""
    <div style="text-align: center;">
        <b>Identification du type de probl√®me :</b>

    </div>
    """,
    unsafe_allow_html=True,
)


st.markdown(
    f"""
    <div style="text-align: justify;">
Pour r√©soudre ce probl√®me, ma premi√®re approche consiste √† utiliser un mod√®le bas√© sur les similarit√©s entre les recettes. Ce mod√®le attribuerait un poids √† chaque recette en fonction de ces similarit√©s.     </br>
      </br>
    </div>
    """,
    unsafe_allow_html=True,
)

st.markdown(
    f"""
    <div style="text-align: center;">
        <b>Nettoyage des donn√©es</b>
    </div>
    """,
    unsafe_allow_html=True,
)


st.markdown(
    f"""
    <div style="text-align: justify;">
Je ne peux pas mettre en place directement un mod√®le car les donn√©es disponibles ne sont pas num√©riques mais textuelles. Je commencerai donc par nettoyer et normaliser le texte : 

**suppression des caract√®res sp√©ciaux**

- suppression des accents et conversion des lettres majuscules en minuscules.

**Traitement des valeurs manquantes :**

- Lorsque des informations sont manquantes, plusieurs strat√©gies peuvent √™tre utilis√©es : suppression, imputation, etc.

**Normalisation des donn√©es :**

- Pour rendre les features comparables entre elles, on peut normaliser ou standardiser les valeurs (par exemple, en utilisant la m√©thode Min-Max ou Z-score).
        
 </br>
 </br>
    </div>
    """,
    unsafe_allow_html=True,
)

st.markdown(
    f"""
    <div style="text-align: center;">
        <b>Vectorisation des donn√©es textuelles</b>
    </div>
    """,
    unsafe_allow_html=True,
)


st.markdown(
    f"""
    <div style="text-align: justify;">
Une fois les donn√©es nettoy√©es, je proc√©derai √† la vectorisation des ingr√©dients pour chaque recette. Par exemple, je pourrais utiliser des m√©thodes telles que TF-IDF ou Word2Vec pour transformer les ingr√©dients en vecteurs num√©riques exploitables. Une repr√©sentation par one-hot encoding pourrait √©galement √™tre utilis√©e si cela est pertinent.
Apr√®s avoir obtenu les vecteurs pour les recettes d√©j√† r√©alis√©es dans le pass√©, je reproduirai le m√™me processus pour les nouvelles recettes dont je souhaite estimer la demande future. Ainsi, j‚Äôaurai d‚Äôun c√¥t√© les vecteurs repr√©sentant les anciennes recettes et, de l‚Äôautre, ceux des nouvelles recettes.
</br>
</br>
    </div>
    """,
    unsafe_allow_html=True,
)

st.markdown(
    f"""
    <div style="text-align: center;">
Calcul de la r√©partition des commandes par semaine
    </div>
    """,
    unsafe_allow_html=True,
)


st.markdown(
    f"""
    <div style="text-align: justify;">
Ensuite, pour chaque semaine, je calculerai la r√©partition des commandes par recette. Pour cela, je diviserai le nombre de commandes de chaque recette par le nombre total de commandes effectu√©es au cours de la m√™me semaine.

Voici un exemple pour une semaine X (dans la suite de mon explication, j‚Äôai attribu√© des valeurs fictives) :

        total de commande : 1000
        recette 1 : 200 commandes
        recette 2 : 500 commandes
        recette 3 : 300 commandes
        
        proportion de la recette 1 : 0.2 
        proportion de la recette 2 : 0.5
        proportion de la recette 3 : 0.4
</br>
</br>
    """,
    unsafe_allow_html=True,
)

st.markdown(
        f"""
    <div style="text-align: center;">
        <b>Premi√®re approche : Un mod√®le de machine learning</b>
    </div>
    """,
        unsafe_allow_html=True,
)

st.markdown(
        f"""
    <div style="text-align: justify;">
Ma premi√®re approche consisterait √† utiliser un **mod√®le de r√©gression lin√©aire** ou un autre mod√®le machine learning.
Les mod√®les de machine learning, notamment les arbres d√©cisionnels comme le mod√®le random forest et les r√©seaux neuronaux, peuvent capturer des relations que l'on appelle non lin√©aires entre les ingr√©dients des recettes et la demande, contrairement √† des m√©thodes bas√©es uniquement sur la similarit√© (deuxi√®me approche). Par exemple, la demande d‚Äôune recette pourrait √™tre influenc√©e de mani√®re complexe par plusieurs ingr√©dients et leur combinaison (par exemple, une recette avec des ingr√©dients populaires mais peu utilis√©s ensemble pourrait avoir une demande diff√©rente de la somme des demandes des ingr√©dients individuels).
    </div>
    """,
        unsafe_allow_html=True,
)
st.markdown(
        """
        Ainsi les mod√®les de machine learning vont capturer les interactions entre les caract√©ristiques. 
    √âtapes :
    1. **Entra√Ænement** :  
       - **Entr√©es** : Les vecteurs des recettes historiques (bas√©s sur leurs caract√©ristiques).  
       - **Cibles** : Les proportions de demande correspondantes.  
    
    2. **Pr√©diction** :  
       Une fois le mod√®le entra√Æn√©, nous utilisons les vecteurs des nouvelles recettes pour pr√©dire leurs proportions de demande.
    
    3. **Ajustement** :
       Apr√®s pr√©diction, je normaliserai les r√©sultats pour respecter le volume total pr√©vu pour la semaine. (explication plus d√©taill√©e par la suite)
    
    
    """
)

st.markdown(
        f"""
    <div style="text-align: center;">
        <b>√âvaluation des mod√®les</b>
    </div>
    """,
        unsafe_allow_html=True,
)

st.markdown(
        """
        <div style="text-align: justify;">
            
Tout d'abord je pourrais utiliser la cross-validation :
pour √©valuer le mod√®le sur diff√©rents ensembles de donn√©es. Cela permet de s‚Äôassurer que le mod√®le g√©n√©ralise bien et n‚Äôest pas biais√© par un sous-ensemble sp√©cifique de donn√©es.
ensuite pour √©valuer les mod√®les, des m√©triques comme l'erreur quadratique moyenne (<b>RMSE</b>) ou le score <b>R¬≤</b> peuvent √™tre utilis√©es. 
Ces m√©triques permettent de mesurer la pr√©cision des pr√©dictions et la qualit√© globale des mod√®les.
            </div>
    </br>
            """,
        unsafe_allow_html=True,
)

st.markdown(
    f"""
    <div style="text-align: center;">
        <b>Autre approche : calcul de la similarit√© entre les anciennes recettes et les nouvelles recettes</b>
    </div>
    """,
    unsafe_allow_html=True,
)


st.markdown(
    f"""
    <div style="text-align: justify;">
    Ma deuxi√®me approche dans le cas ou la premi√®re ne rendrait pas de bon r√©sultat serait pour chaque nouvelle recette, nous √©valuons sa similarit√© avec les anciennes recettes, en utilisant une m√©trique comme la cosine similarity. Cette mesure permet de comparer les nouvelles recettes avec les anciennes sur la base de leurs caract√©ristiques (par exemple, leurs ingr√©dients).
    Dans cet exemple, nous testons la similarit√© entre deux nouvelles recettes et trois anciennes recettes (les valeurs de similarit√© sont fictives) :

    Similarit√© entre la nouvelle recette 1 et les anciennes recettes :
    
        Ancienne recette 1 : 0.4
        Ancienne recette 2 : 0.8
        Ancienne recette 3 : 0.5

    Similarit√© entre la nouvelle recette 2 et les anciennes recettes :
    
        Ancienne recette 1 : 0.7
        Ancienne recette 2 : 0.4
        Ancienne recette 3 : 0.6
</div>
</br>
</br>
    """,
    unsafe_allow_html=True,
)


st.markdown(
    f"""
    <div style="text-align: center;">
        <b>Calcul du poids des nouvelles recettes pour une semaine</b>
    </div>
    """,
    unsafe_allow_html=True,
)

st.markdown(
    f"""
    <div style="text-align: justify;">
        L'objectif est d'attribuer un poids √† chaque nouvelle recette en fonction de sa similarit√© avec les anciennes recettes et de la popularit√© de ces derni√®res. Pour cela, nous multiplions la similarit√© calcul√©e entre une nouvelle recette et une ancienne recette par la proportion de la demande associ√©e √† cette ancienne recette.
        Ainsi, une nouvelle recette fortement similaire √† une ancienne recette populaire obtiendra un poids √©lev√©. √Ä l'inverse, une recette similaire √† une ancienne recette peu populaire aura un poids faible.
        
        Exemple:
        Rappel r√©partition de la demande pour une semaine X
        
                proportion de l'ancienne recette : 0.2 
                proportion de l'ancienne recette : 0.5
                proportion de l'ancienne recette : 0.4
        
        Pour la nouvelle recette 1 :
        
                similarit√© entre nouvelle recette 1 et ancienne recette 1 : 0.4
                similarit√© entre nouvelle recette 1 et ancienne recette 2 : 0.8
                similarit√© entre nouvelle recette 1 et ancienne recette 3 : 0.5
                
        estimation du poids de la nouvelle 1 recette vis-√†-vis des anciennes recettes de la semaine X : 
        
                0.2*0.4+0.5*0.8+0.4*0.5 = 0.68
        
        Pour la nouvelle recette 2 : 
        
                similarit√© entre nouvelle recette 2 et ancienne recette 1 : 0.7
                similarit√© entre nouvelle recette 2 et ancienne recette 2 : 0.4
                similarit√© entre nouvelle recette 2 et ancienne recette 3 : 0.6
                
               
        estimation du poids de la nouvelle recette 2 vis-√†-vis des anciennes recettes de la semaine X : 
        
                0.2*0.7+0.5*0.4+0.4*0.6 = 0.58    
        
</br>
</br>
    """,
    unsafe_allow_html=True,
)
st.markdown(
    f"""
    <div style="text-align: justify;">
        Ainsi, la nouvelle recette 1 obtient un poids plus √©lev√© car elle est plus similaire √† l‚Äôancienne recette 2, qui √©tait tr√®s populaire.    </div>
</br>
</br>
    """,
    unsafe_allow_html=True,
)
st.markdown(
    f"""
    <div style="text-align: center;">
        <b>Calcul du poids des nouvelles recettes sur plusieurs semaines</b>
    </div>
    """,
    unsafe_allow_html=True,
)

st.markdown(
    f"""
    <div style="text-align: justify;">
        Pour estimer le poids d'une nouvelle recette en fonction de plusieurs semaines, nous additionnons les poids calcul√©s pour chaque semaine pr√©c√©dente. Cette approche permet de capturer l'√©volution des tendances au fil du temps.
        √Ä la fin de ce processus, chaque nouvelle recette est associ√©e √† un poids total, calcul√© sur la base des similarit√©s avec les recettes pr√©c√©dentes et de la popularit√© historique de ces derni√®res.    </div>
</br>
</br>
""",
    unsafe_allow_html=True,
)

st.markdown(
    f"""
    <div style="text-align: center;">
        <b>Estimation de la r√©partition des commandes (pour les deux approches)</b>
    </div>
    """,
    unsafe_allow_html=True,
)

st.markdown(
    f"""
    <div style="text-align: justify;">
        Pour obtenir la proportion estim√©e de chaque nouvelle recette, il suffit de diviser le poids ou la proportion obtenue dans les diff√©rentes approches pour cette recette par la somme des poids ou des proportions de toutes les nouvelles recettes.
        Ensuite, pour d√©terminer le nombre de commandes pour une recette donn√©e, on multiplie cette proportion par le volume total de commandes pr√©vu pour la semaine.
</br>
</br>
    """,
    unsafe_allow_html=True,
)

st.markdown(
    f"""
    <div style="text-align: center;">
        <b>Limites des approches</b>
    </div>
    """,
    unsafe_allow_html=True,
)

st.markdown(
    """
        <div style="text-align: justify;">
        
- Les mod√®les se basent sur des donn√©es historiques, ce qui peut poser probl√®me pour les recettes avec des ingr√©dients nouveaux.  

- Lors de semaines avec un faible volume de commandes, les proportions calcul√©es peuvent √™tre peu repr√©sentatives, car la proportion se calcule uniquement sur une semaine. Ainsi, une proportion de 0,2 d'une semaine n'est pas toujours √©quivalente √† une proportion de 0,2 d'une autre semaine. On pourrait donc modifier le calcul pour qu'il soit proportionnel au nombre de commandes. Cependant, dans ce cas, les anciennes recettes, qui attiraient g√©n√©ralement moins de clients car l'entreprise en √©tait √† ses d√©buts, seraient p√©nalis√©es, bien qu'elles soient populaires.

</div>
</br>
</br>
        """,
    unsafe_allow_html=True,
)

st.markdown(
        f"""
    <div style="text-align: center;">
        <b>Pour am√©liorer les pr√©dictions</b>
    </div>
    """,
        unsafe_allow_html=True,
)

st.markdown(
        """
            <div style="text-align: justify;">
Pour essayer d'am√©liorer les pr√©dictions il pourrait √™tre tr√®s interessant de prendre en compte des √©l√©ments dans les mod√®les comme les saisons et les tendances :

- Saisonnalit√© des ingr√©dients : des ingr√©dients sont populaires √† certaines p√©riodes de l'ann√©e (par exemple, des recettes √† base de courge en automne). Int√©grer cette information dans les mod√®les pourrait am√©liorer les pr√©dictions pour ne pas prendre en compte les recettes qui ne correspondent pas √† la bonne saison et qui pourraient donc impacter n√©gativement les pr√©dictions.
                
- Analyse de la tendance des consommateurs : Utiliser les donn√©es sur la consommation des clients au fil des ann√©es pour identifier les tendances de long terme et les √©volutions dans les pr√©f√©rences alimentaires.
        
- Enfin dans le cas d'un mod√®le de machine learning il resterait tr√®s important de r√©entrainer celui-ci r√©guli√®rement pour qu'il puisse rester √† jour sur les √©volutions de la consommation.
        
</div>
            """,
        unsafe_allow_html=True,
)

st.markdown(
    f"""
    <div style="text-align: center;">
        <b>Conclusion</b>
    </div>
    """,
    unsafe_allow_html=True,
)

st.markdown(
    """
        <div style="text-align: justify;">
        Ces approches, qu'elles soient bas√©es sur les similarit√©s ou des mod√®les de machine learning, vise √† estimer la r√©partition des commandes pour de nouvelles recettes. 
        Bien que des ajustements et une r√©flexion plus profonde soient n√©cessaires pour surmonter certaines limites, ces solutions offrent une bonne base pour r√©soudre ce type de probl√®me.
        </div>
        """,
    unsafe_allow_html=True,
)

